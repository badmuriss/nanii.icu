services:
  mongodb:
    image: mongo:7.0
    container_name: naniiicu-mongodb
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-naniiicu}
    volumes:
      - mongodb-data:/data/db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: naniiicu-backend
    ports:
      - "3003:3001"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3001}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:8090,http://localhost:8082}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      MONGO_HOST: ${MONGO_HOST:-mongodb}
      MONGO_PORT: ${MONGO_PORT:-27017}
      MONGO_USER: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGO_DATABASE: ${MONGO_INITDB_DATABASE:-naniiicu}
      MONGO_AUTH_SOURCE: ${MONGO_AUTH_SOURCE:-admin}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
    depends_on:
      - mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3001/health').then(r => r.status === 200 ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./naniiicu-app
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:3003}
    container_name: naniiicu-frontend
    ports:
      - "8090:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  mongodb-data:
    driver: local